#!/bin/bash

# cloudflare api
cf(){
	# todo
	# -z list dns records
	# -a add zone or dns record, depends on parameter
	# -t for type
	# -v for value
	# -T for ttl
	# -p for proxied
	# -P for priority
	# -e edit dns record, necessary?
	# -d delete dns record
	# --DELETE delete zone
	# getopt multiple parameters for an option?
	# getopt can NOT have whitespace between option and optional parameter?
	local suffix method query args zid rid zone name

	args=$(getopt X:q:s:zr:a:d:t:v:T: "$@")
	set -- $args
	while :
	do
		[ -z "$1" ] && break
		case "$1" in
			-X)
				method="$2"
				shift 2
				;;
			-q)
				query="-d $2"
				shift 2
				;;
			-s)
				suffix="$2"
				shift 2
				;;
			-r)	# format output dns records
				name="$2"
				cfrecords $name
				break
				#shift 2
				;;
			-a)
				;;
			-d)
				;;
			-z)
				cfzones
				break
				shift 1
				;;
			*)
				shift
		esac
	done
}

cfupdaterecord(){
	# $1 rid
	# $2 name
	# $3 type
	# $4 content
	# $5 proxied
	# $6 ttl
	# $7 priority
	[ "$1" ] || { echo record id is needed; return 2; }
	[ "$2" ] || { echo zone name needed; return 1; }
	[ "$3" ] || { echo type is needed; return 1; }
	[ "$4" ] || { echo content is needed; return 1; }
	local suffix query zid rid type name content ttl priority proxied method 
	name=$2
	zid=$(cfzid $name)
	[ "$zid" = null ] && { echo zone "$name" not found; return 2; }
	rid=$1
	method=PUT
	suffix="zones/$zid/dns_records/$rid"
	type=${3^^}
	content=$4
	proxied=${5:-false}
	ttl=${6:-1} # 1 is 'automatic'
	priority=${7:-10}
	query="{\"type\":\"$type\",\"name\":\"$name\",\"content\":\"$content\",\"ttl\":$ttl,\"priority\":$priority,\"proxied\":$proxied}"
	cfcurl $suffix $method $query | jq
}

cfaddrecord(){
	# $1 name
	# $2 type
	# $3 content
	# $4 proxied
	# $5 ttl
	# $6 priority
	[ "$1" ] || { echo zone name needed; return 1; }
	[ "$2" ] || { echo type is needed; return 1; }
	[ "$3" ] || { echo content is needed; return 1; }
	local suffix query zid type name content ttl priority proxied method
	name=$1
	zid=$(cfzid $name)
	[ "$zid" = null ] && { echo zone "$name" not found; return 2; }
	suffix="zones/$zid/dns_records"
	type=${2^^}
	content=$3
	proxied=${4:-false}
	ttl=${5:-1} # 1 is 'automatic'
	priority=${6:-10}
	method=POST
	query="{\"type\":\"$type\",\"name\":\"$name\",\"content\":\"$content\",\"ttl\":$ttl,\"priority\":$priority,\"proxied\":$proxied}"
	cfcurl $suffix $method $query | jq
}

cfdelrecord(){
	# $1 zone name. Why? Because we need zone id which is required in url
	# $2 rid
	[ "$1" ] || { echo zone name needed; return 1; }
	[ "$2" ] || { echo record id is needed; return 2; }
	local suffix method zid rid
	zid=$(cfzid $1)
	[ "$zid" = null ] && { echo zone "$1" not found; return 2; }
	rid=$2
	method=DELETE
	suffix="zones/$zid/dns_records/$rid"
	cfcurl $suffix $method | jq
}

cfaddzone(){
	# $1 zone name
	[ "$1" ] || { echo zone name needed; return 1; }
	local suffix query name account jump_start method
	name=$1
	jump_start=${2:-true}
	suffix=zones
	account=$(cfaccount)
	method=POST
	query="{\"name\":\"$name\",\"account\":$account,\"jump_start\":$jump_start}"
	cfcurl $suffix $method $query | jq
}

cfdelzone(){
	# $1 zone name
	[ "$1" ] || { echo zone name needed; return 1; }
	local suffix zid
	zid=$(cfzid $1)
	[ "$zid" = null ] && { echo zone "$1" not found; return 2; }
	suffix=zones/$zid
	method=DELETE
	cfcurl $suffix $method | jq
}

cfzones(){
	local suffix
	suffix="zones?per_page=50"
	cfcurl $suffix | jq -r '.result[] | "\(.id) \(.name)"'
}

cfpurge(){
	# $1 zone name
	[ "$1" ] || { echo zone name needed; return 1; }
	local suffix zid
	zid=$(cfzid $1)
	[ "$zid" = null ] && { echo zone "$1" not found; return 2; }
	suffix=zones/$zid/purge_cache
	method=POST
	query="{\"purge_everything\":true}"
	cfcurl $suffix $method $query | jq
}

cfzid(){
	# $1 zone_name
	local suffix name zone
	name=$1
	zone=${name%.*.*} # or zone=${name%.*}; zone=${zone%.*}
	zone=${name#$zone.}	# or zone=${name/$zone./}
	suffix="zones?name=$zone"
	cfcurl $suffix | jq -r '.result[0].id'
}

cfrecords(){
	# $1 zone_name
	[ "$1" ] || { echo zone name needed; return 1; }
	local suffix zid
	zid=$(cfzid $1)
	[ "$zid" = null ] && { echo zone "$1" not found; return 2; }
	suffix="zones/$zid/dns_records?per_page=100"
	cfcurl $suffix | jq -r '.result[] | "\(.id) \(.type)\t\(.name)\t\(.content)\t\t\(.ttl)\t\(.proxied)\t\(.priority)"'
}

cfaccount(){
	local suffix
	suffix=accounts
	#cfcurl $suffix | jq -r '.result[] | "{\"id\":\"\(.id)\",\"name\":\"\(.name)\"}"'	# whitespace cause Malformed JSON
	cfcurl $suffix | jq -r '.result[] | "{\"id\":\"\(.id)\"}"'
	#cfcurl $suffix | jq '.result[] | {id,name}'	# whitespace cause Malformed JSON
}

cfcurl(){
	# $1 suffix
	# $2 method
	# $3 query
	local URL suffix CONTYPE method query keyfile auth email key
	keyfile=~/.config/cfkey
	[ -f "$keyfile" ] || { echo no auth found; return; }
	auth=$(cat $keyfile)
	email=${auth%:*}
	key=${auth#*:}
	URL="https://api.cloudflare.com/client/v4/"
	CONTYPE="application/json"
	suffix=${1:-'zones?per_page=50'}
	method=${2:-'GET'}
	query=${3:+"-d $3"}

	# to uppercase
	method=${method^^}

	# if $query is empty
	# query="-d {\"type\":\"TXT\",\"name\":\"$name\",\"content\":\"20a67af02088104e2e937337321da43939681ed6\",\"ttl\":3600}"
	[ "$method" = POST -a -z "$query" ] && { echo query string needed for POST; return; }

	curl -s -X $method "${URL}${suffix}" -H "X-Auth-Email: $email" -H "X-Auth-Key: $key" -H "Content-Type: $CONTYPE" $query
}
